package gui.backups.integrity.view;

import core.journal.JournalType;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JFrame;
import javax.swing.table.TableModel;
import gui.Controller;
import gui.CenteredDialog;
import gui.backups.integrity.IntegrityVerificationProgressController;

/**
 * A dialog showing informations of a journal
 * @author Fedrix
 */
public class IntegrityVerificationProgressDialog extends CenteredDialog {
    private IntegrityVerificationProgressController controller;
    private final int DIALOG_WIDTH = 900;
    private final int DIALOG_HEIGHT = 500;
    private final String title = "Integrity Check";
    private final DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("dd MMM yyyy HH::mm::ss");
    private final String journalInfo = "Journal of strategy %d [Type: %s] - Created on %s";
    
    
    /**
     * Creates new form JournalViewerDialog
     * @param parent
     * @param modal
     */
    public IntegrityVerificationProgressDialog(JFrame parent, boolean modal) {
        super(parent, modal);
        this.setTitle(title);
        this.setMinimumSize(new Dimension(DIALOG_WIDTH, DIALOG_HEIGHT));
        this.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e){
                controller.cancel();
            }
        });
        initComponents();
    }
    
    public void setProgress(int progress){
        assert(progress >= jProgressBar.getMinimum() && progress <= jProgressBar.getMaximum());
        jProgressBar.setValue(progress);
    }
    
    public void setJournalInfo(long stgid, JournalType type, LocalDateTime created){
        this.setTitle(journalInfo.formatted(stgid, type, created.format(dateFormat)));
    }
    
    public void setStatus(String status){
        jTextFieldStatus.setText(status);
    }
    
    public void setCompletePass(boolean passed){
        jProgressBar.setForeground((passed) ? Color.GREEN : Color.RED);
        jTextFieldStatus.setText((passed) ? "Backup files integrity verified! All good!" : "Possible backups corruption! Check details above!");
    }

    public void setTableModel(TableModel model){
        jTableFiles.setModel(model);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        jTableFiles = new javax.swing.JTable();
        jProgressBar = new javax.swing.JProgressBar();
        jTextFieldStatus = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jTableFiles.setAutoCreateRowSorter(true);
        jTableFiles.setEnabled(false);
        jTableFiles.setFocusable(false);
        jScrollPane.setViewportView(jTableFiles);

        getContentPane().add(jScrollPane);

        jProgressBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jProgressBar.setMinimumSize(new java.awt.Dimension(10, 40));
        jProgressBar.setPreferredSize(new java.awt.Dimension(146, 40));
        getContentPane().add(jProgressBar);

        jTextFieldStatus.setEditable(false);
        jTextFieldStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStatusActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldStatus);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldStatusActionPerformed

    

    @Override
    public <T extends Controller> void setController(T controller) {
        assert(controller instanceof IntegrityVerificationProgressController);
        this.controller = controller.toIntegrityVerificationProgressController();
    }

    @Override
    public IntegrityVerificationProgressDialog toIntegrityVerificationProgressDialog() {
        return this;
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable jTableFiles;
    private javax.swing.JTextField jTextFieldStatus;
    // End of variables declaration//GEN-END:variables
}
