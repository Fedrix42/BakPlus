package gui.mainwindow.view;

import gui.CenteredDialog;
import gui.Controller;
import init.Environment;
import java.awt.Dimension;
import javax.swing.JFrame;


public class AboutDialog extends CenteredDialog {
    private final String details = """
                                   Version: %s
                                   License: %s
                                   Java Version: %s
                                   Data Folder: %s
                                   Settings File: %s
                                   Temporary Folder Used: %s
                                   """;
    
    public AboutDialog(JFrame parent, boolean modal) {
        super(parent, modal);
        this.setTitle("About");
        this.setPreferredSize(new Dimension(600, 500));
        initComponents();
        setDetails();
    }

    private void setDetails(){
        
        jTextAreaDesc.setText(jTextAreaDesc.getText() + System.lineSeparator() +
                details.formatted(Environment.VERSION,
                        Environment.LICENSE,
                        Environment.JAVA_VERSION,
                        Environment.getDataFolder(),
                        Environment.getSettingsFile(),
                        Environment.getTmpFolder()
                )
        );
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneDesc = new javax.swing.JScrollPane();
        jTextAreaDesc = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jTextAreaDesc.setEditable(false);
        jTextAreaDesc.setColumns(20);
        jTextAreaDesc.setFont(new java.awt.Font("Garuda", 0, 16)); // NOI18N
        jTextAreaDesc.setRows(5);
        jTextAreaDesc.setText("Bak+ is a simple and open source software which can be used to make \nincremental backups in order to save space when securing your data.\nIt's not meant to be a professional product but rather a useful tool for those \nwho want a more rude utility and control over their data by knowing where their files \nbackup files are stored.\n\nSee help for more info.");
        jTextAreaDesc.setBorder(null);
        jTextAreaDesc.setMaximumSize(new java.awt.Dimension(598, 200));
        jTextAreaDesc.setPreferredSize(new java.awt.Dimension(598, 200));
        jScrollPaneDesc.setViewportView(jTextAreaDesc);

        getContentPane().add(jScrollPaneDesc);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public <T extends Controller> void setController(T controller) {}

    @Override
    public AboutDialog toAboutDialog() {
        return this;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPaneDesc;
    private javax.swing.JTextArea jTextAreaDesc;
    // End of variables declaration//GEN-END:variables
}
