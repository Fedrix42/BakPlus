
package gui.strategy.filters;

import gui.CenteredDialog;
import gui.Controller;
import gui.strategy.StrategyController;
import java.awt.Dimension;
import javax.swing.JDialog;
import javax.swing.ListModel;


public class StrategyFiltersDialog extends CenteredDialog {
    private StrategyController controller;
    
    public StrategyFiltersDialog(JDialog parent, boolean modal) {
        super(parent, modal);
        this.setPreferredSize(new Dimension(450, 400));
        this.setTitle("Manage filters for strategy");
        initComponents();
    }
    
    /**
     * Set the model for the swing filters list 
     * @param model 
     */
    public void setJListModel(ListModel<String> model){
        jListFilters.setModel(model);
    }
    
    /**
     * @return the selected filter or null if there is no selection
     */
    public String getSelectedFilter(){
        return jListFilters.getSelectedValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListFilters = new javax.swing.JList<>();
        jPanelControls = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jButtonDone = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(2);
        jTextArea1.setText("Filters are used to exclude files and directories from being backed up. \nThey are expressed as a pure regex so be careful to write them with the correct syntax.\nExample to exclude log files from backup: (.*).log");
        jTextArea1.setFocusable(false);
        jScrollPane2.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane2);

        jScrollPane1.setViewportView(jListFilters);

        getContentPane().add(jScrollPane1);

        jButtonAdd.setText("Add Filter");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanelControls.add(jButtonAdd);

        jButtonRemove.setText("Remove Filter");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });
        jPanelControls.add(jButtonRemove);

        jButtonDone.setText("Done");
        jButtonDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDoneActionPerformed(evt);
            }
        });
        jPanelControls.add(jButtonDone);

        getContentPane().add(jPanelControls);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        controller.addFilter();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        controller.removeFilter();
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDoneActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonDoneActionPerformed

    @Override
    public <T extends Controller> void setController(T controller) {
        this.controller = controller.toStrategyController();
    }

    @Override
    public StrategyFiltersDialog toStrategyFiltersDialog() {
        return this;
    }

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDone;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JList<String> jListFilters;
    private javax.swing.JPanel jPanelControls;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
